<?xml version="1.0" encoding="UTF-8"?>
<proofMetaFile proofFileMD5="c5d73bc496f52ddc2e5f1f64d666b324" proofClosed="false" proofOutdated="false">
   <markerMessage>
Open Proof:
java.util.VerifiedIdentityHashMap.EntrySet[java.lang.Iterable::iterator()].JML behavior operation contract.0

Reason: Goal can&apos;t be closed automatically.
Hint: Check code and specifications for bugs or continue proof interactively.

Time: 0.201 s
Nodes: 112
Branches: 3
   </markerMessage>
   <calledMethods>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.EntryIterator#&lt;createObject&gt;()"/>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.EntryIterator#&lt;allocate&gt;()"/>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.EntryIterator#&lt;prepareEnter&gt;()"/>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator#&lt;prepare&gt;()"/>
      <calledMethod fullQualifiedName="java.lang.Object#&lt;prepare&gt;()"/>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator#&lt;init&gt;()"/>
      <calledMethod fullQualifiedName="java.lang.Object#&lt;init&gt;()"/>
   </calledMethods>
   <references rep="pre: {heap=java.lang.Object::&lt;inv&gt;(heap,self)}; mby: null; post: {heap=and(imp(equals(exc,null),and(java.lang.Object::&lt;inv&gt;(heap,self),not(equals(result,null)))),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))}; mods: {heap=intersect(if-then-else(or(java.lang.Object::&lt;inv&gt;(heap,self),java.lang.Object::&lt;inv&gt;(heap,self)),intersect(if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),intersect(if-then-else(or(java.lang.Object::&lt;inv&gt;(heap,self),java.lang.Object::&lt;inv&gt;(heap,self)),intersect(if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs),if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs)),allLocs),if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs)),allLocs),if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs)),allLocs),if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs)), savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: diamond; transaction: false">
      <callMethodReferences>
         <callMethodReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="&lt;init&gt;" parameters="" implementations="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator;java.util.VerifiedIdentityHashMap.ValueIterator;java.util.VerifiedIdentityHashMap.EntryIterator;java.util.VerifiedIdentityHashMap.KeyIterator;"/>
      </callMethodReferences>
      <type name="java.util.VerifiedIdentityHashMap.EntrySet">
         <axiomReferences>
            <axiomReference kjt="java.util.VerifiedIdentityHashMap.EntrySet" name="Class invariant axiom for java.util.VerifiedIdentityHashMap.EntrySet" rep="equiv(java.lang.Object::&lt;inv&gt;(heap,self),true)"/>
         </axiomReferences>
         <accessReferences>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.EntrySet" name="java.util.VerifiedIdentityHashMap.EntrySet::&lt;enclosingThis&gt;" type="VerifiedIdentityHashMap" visibility="private" isStatic="false" isFinal="false" initializer=""/>
         </accessReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.EntrySet" name="iterator" parameters="" src="publicIteratoriterator () {return new EntryIterator ();}"/>
         </inlineMethodReferences>
      </type>
      <type name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator">
         <accessReferences>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::index" type="int" visibility="" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::expectedModCount" type="int" visibility="" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::lastReturnedIndex" type="int" visibility="" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::indexValid" type="boolean" visibility="" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::traversalTable" type="" visibility="" isStatic="false" isFinal="false" initializer=""/>
         </accessReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="&lt;init&gt;" parameters="" src="public void &lt;init&gt; () {super.&lt;init&gt;();this.index=(this.size!=0 ?0 :this.table.length);this.expectedModCount=this.modCount;this.lastReturnedIndex=-1;this.traversalTable=this.table;}"/>
         </inlineMethodReferences>
      </type>
      <type name="java.util.VerifiedIdentityHashMap.EntryIterator">
         <accessReferences>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator" name="java.util.VerifiedIdentityHashMap.EntryIterator::lastReturnedEntry" type="Entry" visibility="private" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator" name="java.util.VerifiedIdentityHashMap.EntryIterator::&lt;enclosingThis&gt;" type="VerifiedIdentityHashMap" visibility="private" isStatic="false" isFinal="false" initializer=""/>
         </accessReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator" name="&lt;init&gt;" parameters="" src="public void &lt;init&gt; () {super.&lt;init&gt;();this.lastReturnedEntry=null;}"/>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator" name="&lt;init&gt;" parameters="VerifiedIdentityHashMap;" src="public void &lt;init&gt; (VerifiedIdentityHashMap _ENCLOSING_THIS) {this.&lt;enclosingThis&gt;=_ENCLOSING_THIS;super.&lt;init&gt;();this.lastReturnedEntry=null;}"/>
         </inlineMethodReferences>
      </type>
      <type name="java.util.VerifiedIdentityHashMap.ValueIterator">
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.ValueIterator" name="&lt;init&gt;" parameters="" src="public void &lt;init&gt; () {super.&lt;init&gt;();}"/>
         </inlineMethodReferences>
      </type>
      <type name="java.util.VerifiedIdentityHashMap.KeyIterator">
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.KeyIterator" name="&lt;init&gt;" parameters="" src="public void &lt;init&gt; () {super.&lt;init&gt;();}"/>
         </inlineMethodReferences>
      </type>
   </references>
</proofMetaFile>
