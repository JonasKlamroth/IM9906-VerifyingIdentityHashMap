<?xml version="1.0" encoding="UTF-8"?>
<proofMetaFile proofFileMD5="9073bdeb7950268e3d44b29904dc7a25" proofClosed="false" proofOutdated="false">
   <markerMessage>
Open Proof:
java.util.VerifiedIdentityHashMap.EntryIterator[java.util.Iterator::next()].JML behavior operation contract.0

Reason: Goal can&apos;t be closed automatically.
Hint: Check code and specifications for bugs or continue proof interactively.

Time: 0.427 s
Nodes: 355
Branches: 17
   </markerMessage>
   <usedContracts>
      <usedContract proofFile="/IM9906 - VerifyingIdentityHashMap/proofs/java/util/VerifiedIdentityHashMap.java/java_util_VerifiedIdentityHashMap_IdentityHashMapIterator[java_util_Iterator__hasNext()]_JML_behavior_operation_contract_0.proof"/>
   </usedContracts>
   <calledMethods>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator#nextIndex()"/>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.EntryIterator.Entry#&lt;createObject&gt;()"/>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.EntryIterator.Entry#&lt;allocate&gt;()"/>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap.EntryIterator.Entry#&lt;prepareEnter&gt;()"/>
      <calledMethod fullQualifiedName="java.lang.Object#&lt;prepare&gt;()"/>
      <calledMethod fullQualifiedName="java.lang.Object#&lt;init&gt;()"/>
   </calledMethods>
   <references rep="pre: {heap=java.lang.Object::&lt;inv&gt;(heap,self)}; mby: null; post: {heap=and(imp(equals(exc,null),and(java.lang.Object::&lt;inv&gt;(heap,self),not(equals(result,null)))),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))}; mods: {heap=setMinus(allLocs,freshLocs(heap)), savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: diamond; transaction: false">
      <callMethodReferences>
         <callMethodReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="nextIndex" parameters="" implementations="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator;"/>
      </callMethodReferences>
      <type name="java.util.VerifiedIdentityHashMap.EntryIterator">
         <axiomReferences>
            <axiomReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator" name="Class invariant axiom for java.util.VerifiedIdentityHashMap.EntryIterator" rep="equiv(java.lang.Object::&lt;inv&gt;(heap,self),not(equals(java.util.VerifiedIdentityHashMap.EntryIterator.Entry::select(heap,self,java.util.VerifiedIdentityHashMap.EntryIterator::$lastReturnedEntry),null)))"/>
         </axiomReferences>
         <accessReferences>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator" name="java.util.VerifiedIdentityHashMap.EntryIterator::lastReturnedEntry" type="Entry" visibility="private" isStatic="false" isFinal="false" initializer=""/>
         </accessReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator" name="next" parameters="" src="publicMap.Entrynext () {this.lastReturnedEntry=new Entry (nextIndex());return this.lastReturnedEntry;}"/>
         </inlineMethodReferences>
      </type>
      <type name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator">
         <accessReferences>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::expectedModCount" type="int" visibility="" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::indexValid" type="boolean" visibility="" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::index" type="int" visibility="" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator::lastReturnedIndex" type="int" visibility="" isStatic="false" isFinal="false" initializer=""/>
         </accessReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="nextIndex" parameters="" src="protectedintnextIndex () {if (this.modCount!=this.expectedModCount)                 throw  new  ConcurrentModificationException ();             if (!this.indexValid&amp;&amp;!hasNext())                 throw  new  NoSuchElementException ();   this.indexValid=false;   this.lastReturnedIndex=this.index;   this.index+=2;             return  this.lastReturnedIndex; }"/>
         </inlineMethodReferences>
         <contractReferences>
            <contractReference kjt="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator" name="java.util.VerifiedIdentityHashMap.IdentityHashMapIterator[java.util.Iterator::hasNext()].JML behavior operation contract.0" rep="pre: {heap=java.lang.Object::&lt;inv&gt;(heap,self)}; mby: null; post: {heap=and(imp(equals(exc,null),java.lang.Object::&lt;inv&gt;(heap,self)),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))}; mods: {heap=setMinus(allLocs,freshLocs(heap)), savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: diamond; transaction: false"/>
         </contractReferences>
      </type>
      <type name="java.util.VerifiedIdentityHashMap">
         <accessReferences>
            <accessReference kjt="java.util.VerifiedIdentityHashMap" name="java.util.VerifiedIdentityHashMap::modCount" type="int" visibility="private" isStatic="false" isFinal="false" initializer=""/>
         </accessReferences>
      </type>
      <type name="java.util.VerifiedIdentityHashMap.EntryIterator.Entry">
         <accessReferences>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator.Entry" name="java.util.VerifiedIdentityHashMap.EntryIterator.Entry::index" type="int" visibility="private" isStatic="false" isFinal="false" initializer=""/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator.Entry" name="java.util.VerifiedIdentityHashMap.EntryIterator.Entry::&lt;enclosingThis&gt;" type="EntryIterator" visibility="private" isStatic="false" isFinal="false" initializer=""/>
         </accessReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.EntryIterator.Entry" name="&lt;init&gt;" parameters="int;EntryIterator;" src="private void &lt;init&gt; (int index,EntryIterator _ENCLOSING_THIS) {this.&lt;enclosingThis&gt;=_ENCLOSING_THIS;super.&lt;init&gt;();this.index=index;}"/>
         </inlineMethodReferences>
      </type>
   </references>
</proofMetaFile>
