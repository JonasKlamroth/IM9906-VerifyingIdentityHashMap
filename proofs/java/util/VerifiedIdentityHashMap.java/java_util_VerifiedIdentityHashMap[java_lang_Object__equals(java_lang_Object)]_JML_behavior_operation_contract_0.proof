\profile "Java Profile";

\settings {
"#Proof-Settings-Config-File
#Tue May 05 19:53:07 CEST 2020
[StrategyProperty]QUERYAXIOM_OPTIONS_KEY=QUERYAXIOM_ON
[SMTSettings]invariantForall=false
[Strategy]ActiveStrategy=JavaCardDLStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=assertions-assertions\\:on , initialisation-initialisation\\:disableStaticInitialisation , intRules-intRules\\:arithmeticSemanticsIgnoringOF , programRules-programRules\\:Java , runtimeExceptions-runtimeExceptions\\:allow , JavaCard-JavaCard\\:off , Strings-Strings\\:on , modelFields-modelFields\\:showSatisfiability , bigint-bigint\\:on , sequences-sequences\\:on , moreSeqRules-moreSeqRules\\:off , reach-reach\\:on , integerSimplificationRules-integerSimplificationRules\\:full , permissions-permissions\\:off , wdOperator-wdOperator\\:L , wdChecks-wdChecks\\:off , joinGenerateIsWeakeningGoal-joinGenerateIsWeakeningGoal\\:off
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[StrategyProperty]INF_FLOW_CHECK_PROPERTY=INF_FLOW_CHECK_FALSE
[SMTSettings]UseBuiltUniqueness=false
[SMTSettings]explicitTypeHierarchy=false
[SMTSettings]instantiateHierarchyAssumptions=true
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[SMTSettings]SelectedTaclets=
[StrategyProperty]DEP_OPTIONS_KEY=DEP_ON
[StrategyProperty]AUTO_INDUCTION_OPTIONS_KEY=AUTO_INDUCTION_OFF
[Strategy]MaximumNumberOfAutomaticApplications=10000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_NONCLOSE
[StrategyProperty]CLASS_AXIOM_OPTIONS_KEY=CLASS_AXIOM_FREE
[SMTSettings]useConstantsForBigOrSmallIntegers=true
[Strategy]Timeout=-1
[StrategyProperty]QUERY_NEW_OPTIONS_KEY=QUERY_OFF
[SMTSettings]useUninterpretedMultiplication=true
[StrategyProperty]BLOCK_OPTIONS_KEY=BLOCK_CONTRACT
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_CONTRACT
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[SMTSettings]maxGenericSorts=2
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
[SMTSettings]integersMinimum=-2147483645
[StrategyProperty]VBT_PHASE=VBT_SYM_EX
[SMTSettings]integersMaximum=2147483645
"
}

\bootclasspath "../../../../jre";

\javaSource "../../../../src";

\proofObligation "#Proof Obligation Settings
#Tue May 05 19:53:07 CEST 2020
contract=java.util.VerifiedIdentityHashMap[java.lang.Object\\:\\:equals(java.lang.Object)].JML behavior operation contract.0
name=java.util.VerifiedIdentityHashMap[java.lang.Object\\:\\:equals(java.lang.Object)].JML behavior operation contract.0
class=de.uka.ilkd.key.proof.init.FunctionalOperationContractPO
";

\proof {
(keyLog "0" (keyUser "martindeboer" ) (keyVersion "19f0b8c2a4fe689cd76be6cd1753b36e2e825a89"))

(autoModeTime "644")

(branch "dummy ID"
(builtin "One Step Simplification" (formula "1") (newnames "o,self,result,exc,heapAtPre,o_0,f"))
(rule "impRight" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "3"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "5"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "andLeft" (formula "1"))
(rule "notLeft" (formula "2"))
(rule "eqSymm" (formula "9") (term "1,0,0,1,0,1"))
(rule "replace_known_right" (formula "4") (term "0") (ifseqformula "8"))
(builtin "One Step Simplification" (formula "4"))
(rule "assignment" (formula "9") (term "1"))
(builtin "One Step Simplification" (formula "9"))
(rule "elementOfSetMinus" (formula "9") (term "0,0,0,0,1,0,1"))
(builtin "One Step Simplification" (formula "9"))
(rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "6") (inst "sk=sk_0") (ifseqformula "3"))
(branch "Use Axiom"
   (rule "andLeft" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "8"))
   (rule "notLeft" (formula "7"))
   (rule "nonNull" (formula "6") (inst "i=i"))
   (rule "greater_literals" (formula "6") (term "0,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "sub_literals" (formula "6") (term "2,1,0,1"))
   (builtin "One Step Simplification" (formula "6"))
   (rule "andLeft" (formula "6"))
   (rule "notLeft" (formula "6"))
   (rule "inEqSimp_ltToLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,0,0,1,0,0"))
   (rule "inEqSimp_commuteLeq" (formula "6") (term "0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,1,0,0"))
   (rule "nnf_imp2or" (formula "6") (term "0"))
   (rule "nnf_notAnd" (formula "6") (term "0,0"))
   (rule "inEqSimp_notLeq" (formula "6") (term "1,0,0"))
   (rule "polySimp_rightDist" (formula "6") (term "1,0,0,1,0,0"))
   (rule "mul_literals" (formula "6") (term "0,1,0,0,1,0,0"))
   (rule "polySimp_addAssoc" (formula "6") (term "0,0,1,0,0"))
   (rule "add_literals" (formula "6") (term "0,0,0,1,0,0"))
   (rule "add_zero_left" (formula "6") (term "0,0,1,0,0"))
   (rule "inEqSimp_sepPosMonomial1" (formula "6") (term "1,0,0"))
   (rule "polySimp_mulLiterals" (formula "6") (term "1,1,0,0"))
   (rule "polySimp_elimOne" (formula "6") (term "1,1,0,0"))
   (rule "inEqSimp_notGeq" (formula "6") (term "0,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0,0,0"))
   (rule "add_zero_right" (formula "6") (term "0,0,0,0,0"))
   (rule "inEqSimp_sepPosMonomial0" (formula "6") (term "0,0,0"))
   (rule "mul_literals" (formula "6") (term "1,0,0,0"))
   (rule "commute_or_2" (formula "6") (term "0"))
   (rule "commute_or" (formula "6") (term "0,0"))
   (rule "methodBodyExpand" (formula "12") (term "1") (newnames "heapBefore_equals,savedHeapBefore_equals"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "ifElseUnfold" (formula "12") (term "1") (inst "#boolv=x"))
   (rule "variableDeclaration" (formula "12") (term "1") (newnames "x"))
   (rule "equality_comparison_simple" (formula "12") (term "1"))
   (builtin "One Step Simplification" (formula "12"))
   (rule "ifElseSplit" (formula "12"))
   (branch "if x true"
      (opengoal " ")
   )
   (branch "if x false"
      (builtin "One Step Simplification" (formula "13"))
      (builtin "One Step Simplification" (formula "1"))
      (rule "notLeft" (formula "1"))
      (rule "ifElseSplit" (formula "13"))
      (branch "if _o instanceof VerifiedIdentityHashMap true"
         (opengoal " ")
      )
      (branch "if _o instanceof VerifiedIdentityHashMap false"
         (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "13")))
         (rule "notLeft" (formula "1"))
         (rule "ifElseSplit" (formula "14"))
         (branch "if _o instanceof Map true"
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
            (rule "variableDeclarationAssign" (formula "15") (term "1"))
            (rule "variableDeclaration" (formula "15") (term "1") (newnames "m"))
            (rule "reference_type_cast" (formula "15") (term "1"))
            (branch "Normal Execution (_o instanceof Map)"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "15")) (ifInst ""  (formula "2")))
               (rule "true_left" (formula "1"))
               (rule "returnUnfold" (formula "15") (term "1") (inst "#v0=x"))
               (rule "variableDeclarationAssign" (formula "15") (term "1"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "x_1"))
               (rule "methodCallWithAssignmentUnfoldTarget" (formula "15") (term "1") (inst "#v0=s"))
               (rule "variableDeclaration" (formula "15") (term "1") (newnames "s"))
               (builtin "Use Operation Contract" (formula "15") (newnames "heapBefore_entrySet,result_0,exc_0,heapAfter_entrySet,anon_heap_entrySet") (contract "java.util.VerifiedIdentityHashMap[java.util.Map::entrySet()].JML behavior operation contract.0"))
               (branch "Post (entrySet)"
                  (builtin "One Step Simplification" (formula "17"))
                  (builtin "One Step Simplification" (formula "9"))
                  (rule "andLeft" (formula "9"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,1,0") (ifseqformula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "11"))
                  (rule "andLeft" (formula "10"))
                  (rule "typeEqDerived" (formula "13") (term "0,0,1,1") (ifseqformula "10"))
                  (rule "typeEqDerived" (formula "13") (term "0,1,1,1") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "13") (ifInst ""  (formula "10")))
                  (rule "true_left" (formula "13"))
                  (rule "replace_known_left" (formula "12") (term "0") (ifseqformula "10"))
                  (builtin "One Step Simplification" (formula "12"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "13"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "assignment" (formula "21") (term "1"))
                  (builtin "One Step Simplification" (formula "21"))
                  (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "12") (inst "sk=sk_5") (ifseqformula "4"))
                  (branch "Use Axiom"
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "13"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "13"))
                     (rule "nonNull" (formula "12") (inst "i=i"))
                     (rule "sub_literals" (formula "12") (term "2,1,0,1,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "greater_literals" (formula "12") (term "0,1"))
                     (builtin "One Step Simplification" (formula "12"))
                     (rule "andLeft" (formula "12"))
                     (rule "notLeft" (formula "12"))
                     (rule "inEqSimp_ltToLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "12") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
                     (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_1"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "12") (term "1,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_1"))
                     (rule "applyEq" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "12"))
                     (rule "simplifySelectOfAnonEQ" (formula "12") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
                     (rule "elementOfSetMinus" (formula "12") (term "0,0"))
                     (builtin "One Step Simplification" (formula "12") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
                     (rule "applyEqReverse" (formula "13") (term "0,1,1,1,0,0") (ifseqformula "12"))
                     (rule "applyEqReverse" (formula "13") (term "1,0,0,1,0") (ifseqformula "12"))
                     (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "12"))
                     (rule "hideAuxiliaryEq" (formula "12"))
                     (rule "nnf_imp2or" (formula "12") (term "0"))
                     (rule "nnf_notAnd" (formula "12") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "12") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "12") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "12") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "12") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "12") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "12") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "12") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "12") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "12") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "12") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "12") (term "0,0,0"))
                     (rule "mul_literals" (formula "12") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "12") (term "0"))
                     (rule "commute_or" (formula "12") (term "0,0"))
                     (rule "methodCallWithAssignmentUnfoldArguments" (formula "24") (term "1"))
                     (rule "variableDeclarationAssign" (formula "24") (term "1"))
                     (rule "variableDeclaration" (formula "24") (term "1") (newnames "var"))
                     (rule "assignment" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "variableDeclarationAssign" (formula "24") (term "1"))
                     (rule "variableDeclaration" (formula "24") (term "1") (newnames "var_1"))
                     (builtin "Use Operation Contract" (formula "24") (newnames "heapBefore_entrySet_0,result_1,exc_1,heapAfter_entrySet_0,anon_heap_entrySet_0") (contract "java.util.Map[java.util.Map::entrySet()].JML behavior operation contract.0"))
                     (branch "Post (entrySet)"
                        (opengoal " ")
                     )
                     (branch "Exceptional Post (entrySet)"
                        (opengoal " ")
                     )
                     (branch "Pre (entrySet)"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "wellFormedAnonEQ" (formula "24") (term "1") (ifseqformula "9"))
                        (rule "replace_known_left" (formula "24") (term "0,1") (ifseqformula "2"))
                        (builtin "One Step Simplification" (formula "24") (ifInst ""  (formula "8")))
                        (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
                        (rule "arrayLengthIsAnInt" (formula "8") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "8"))
                        (rule "true_left" (formula "8"))
                        (rule "cut_direct" (formula "12") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (opengoal " ")
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "12"))
                           (rule "arrayLengthIsAnInt" (formula "13") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "true_left" (formula "13"))
                           (rule "arrayLengthNotNegative" (formula "13") (term "1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "2"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "3"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "12"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "ineffectiveCast" (formula "33") (term "1") (ifseqformula "7"))
                           (rule "typeEqDerived2" (formula "8") (term "0") (ifseqformula "1"))
                           (builtin "One Step Simplification" (formula "8"))
                           (rule "true_left" (formula "8"))
                           (rule "applyEq" (formula "33") (term "1") (ifseqformula "1"))
                           (rule "ineffectiveCast2" (formula "1") (term "0") (ifseqformula "1"))
                           (opengoal " ")
                        )
                     )
                     (branch "Null reference (m = null)"
                        (builtin "One Step Simplification" (formula "24"))
                        (rule "notRight" (formula "24"))
                        (rule "arrayLengthNotNegative" (formula "8") (term "1,1,0"))
                        (rule "arrayLengthIsAnInt" (formula "9") (term "1,1,0"))
                        (builtin "One Step Simplification" (formula "9"))
                        (rule "true_left" (formula "9"))
                        (rule "cut_direct" (formula "13") (term "0"))
                        (branch "CUT: result_0.<created> = TRUE TRUE"
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "arrayLengthIsAnInt" (formula "14") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "22") (term "0") (ifseqformula "3"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "23"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "24") (term "0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "25"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "26") (term "0") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "27"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "19") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "20"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "21") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "22"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "15"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "ineffectiveCast" (formula "7") (term "0") (ifseqformula "8"))
                           (rule "typeEqDerived2" (formula "9") (term "0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                           (rule "typeEqDerived2" (formula "26") (term "0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "26"))
                           (rule "closeTrue" (formula "26"))
                        )
                        (branch "CUT: result_0.<created> = TRUE FALSE"
                           (builtin "One Step Simplification" (formula "13"))
                           (rule "arrayLengthIsAnInt" (formula "14") (term "1,1,0"))
                           (builtin "One Step Simplification" (formula "14"))
                           (rule "true_left" (formula "14"))
                           (rule "arrayLengthNotNegative" (formula "14") (term "1,1,0"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "3"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "25") (term "0") (ifseqformula "4"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "26"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "27") (term "0") (ifseqformula "5"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "28"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "20") (term "0") (ifseqformula "13"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "21"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "14"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "onlyCreatedObjectsAreReferenced" (formula "23") (term "0") (ifseqformula "15"))
                           (rule "replace_known_right" (formula "1") (term "0") (ifseqformula "24"))
                           (builtin "One Step Simplification" (formula "1"))
                           (rule "ineffectiveCast" (formula "7") (term "0") (ifseqformula "8"))
                           (rule "typeEqDerived2" (formula "9") (term "0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "9"))
                           (rule "true_left" (formula "9"))
                           (rule "applyEq" (formula "7") (term "0") (ifseqformula "8"))
                           (rule "typeEqDerived2" (formula "27") (term "0") (ifseqformula "7"))
                           (builtin "One Step Simplification" (formula "27"))
                           (rule "closeTrue" (formula "27"))
                        )
                     )
                  )
                  (branch "Show Axiom Satisfiability"
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "closeTrue" (formula "13"))
                  )
               )
               (branch "Exceptional Post (entrySet)"
                  (builtin "One Step Simplification" (formula "9"))
                  (builtin "One Step Simplification" (formula "17"))
                  (rule "andLeft" (formula "9"))
                  (rule "selectCreatedOfAnonAsFormulaEQ" (formula "10") (term "1,0") (ifseqformula "9"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "10"))
                  (rule "andLeft" (formula "12"))
                  (rule "notLeft" (formula "10"))
                  (rule "replace_known_right" (formula "11") (term "0") (ifseqformula "13"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "true_left" (formula "11"))
                  (rule "replace_known_right" (formula "11") (term "0,0") (ifseqformula "12"))
                  (builtin "One Step Simplification" (formula "11"))
                  (rule "andLeft" (formula "11"))
                  (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "11") (inst "sk=sk_3") (ifseqformula "4"))
                  (branch "Use Axiom"
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "12"))
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "12"))
                     (rule "nonNull" (formula "11") (inst "i=i"))
                     (rule "greater_literals" (formula "11") (term "0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "sub_literals" (formula "11") (term "2,1,0,1"))
                     (builtin "One Step Simplification" (formula "11"))
                     (rule "andLeft" (formula "11"))
                     (rule "notLeft" (formula "11"))
                     (rule "inEqSimp_ltToLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "inEqSimp_commuteLeq" (formula "11") (term "0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulComm0" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,1,0,0"))
                     (rule "pullOutSelect" (formula "15") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_entrySet_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
                     (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "23")) (ifInst ""  (formula "4")))
                     (rule "applyEqReverse" (formula "16") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "14") (term "0") (inst "selectSK=java_util_VerifiedIdentityHashMap_NULL_KEY_0"))
                     (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "10"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "elementOfSetMinus" (formula "1") (term "0,0"))
                     (builtin "One Step Simplification" (formula "1"))
                     (rule "applyEqReverse" (formula "15") (term "0") (ifseqformula "1"))
                     (rule "hideAuxiliaryEq" (formula "1"))
                     (rule "pullOutSelect" (formula "11") (term "1,0,0,1,0") (inst "selectSK=java_util_VerifiedIdentityHashMap_table_0"))
                     (rule "applyEq" (formula "14") (term "0") (ifseqformula "11"))
                     (rule "applyEq" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "11"))
                     (rule "simplifySelectOfAnonEQ" (formula "11") (ifseqformula "9"))
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
                     (rule "elementOfSetMinus" (formula "11") (term "0,0"))
                     (builtin "One Step Simplification" (formula "11") (ifInst ""  (formula "23")) (ifInst ""  (formula "3")))
                     (rule "applyEqReverse" (formula "14") (term "0") (ifseqformula "11"))
                     (rule "applyEqReverse" (formula "12") (term "1,0,0,1,0") (ifseqformula "11"))
                     (rule "applyEqReverse" (formula "12") (term "0,1,1,1,0,0") (ifseqformula "11"))
                     (rule "hideAuxiliaryEq" (formula "11"))
                     (rule "nnf_imp2or" (formula "11") (term "0"))
                     (rule "nnf_notAnd" (formula "11") (term "0,0"))
                     (rule "inEqSimp_notLeq" (formula "11") (term "1,0,0"))
                     (rule "polySimp_rightDist" (formula "11") (term "1,0,0,1,0,0"))
                     (rule "mul_literals" (formula "11") (term "0,1,0,0,1,0,0"))
                     (rule "polySimp_addAssoc" (formula "11") (term "0,0,1,0,0"))
                     (rule "add_literals" (formula "11") (term "0,0,0,1,0,0"))
                     (rule "add_zero_left" (formula "11") (term "0,0,1,0,0"))
                     (rule "inEqSimp_sepPosMonomial1" (formula "11") (term "1,0,0"))
                     (rule "polySimp_mulLiterals" (formula "11") (term "1,1,0,0"))
                     (rule "polySimp_elimOne" (formula "11") (term "1,1,0,0"))
                     (rule "inEqSimp_notGeq" (formula "11") (term "0,0,0"))
                     (rule "times_zero_1" (formula "11") (term "1,0,0,0,0,0"))
                     (rule "add_zero_right" (formula "11") (term "0,0,0,0,0"))
                     (rule "inEqSimp_sepPosMonomial0" (formula "11") (term "0,0,0"))
                     (rule "mul_literals" (formula "11") (term "1,0,0,0"))
                     (rule "commute_or_2" (formula "11") (term "0"))
                     (rule "commute_or" (formula "11") (term "0,0"))
                     (rule "methodCallParamThrow" (formula "24") (term "1"))
                     (builtin "One Step Simplification" (formula "24"))
                     (rule "tryCatchThrow" (formula "24") (term "1"))
                     (rule "arrayLengthIsAnInt" (formula "7") (term "1,1,0"))
                     (builtin "One Step Simplification" (formula "7"))
                     (rule "true_left" (formula "7"))
                     (rule "arrayLengthNotNegative" (formula "7") (term "1,1,0"))
                     (rule "ifElseUnfold" (formula "25") (term "1") (inst "#boolv=x"))
                     (rule "variableDeclaration" (formula "25") (term "1") (newnames "x_2"))
                     (rule "equality_comparison_simple" (formula "25") (term "1"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "replace_known_right" (formula "25") (term "0,0,1,0") (ifseqformula "17"))
                     (builtin "One Step Simplification" (formula "25"))
                     (rule "ifElseSplit" (formula "25"))
                     (branch "if x_2 true"
                        (builtin "One Step Simplification" (formula "26"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "closeFalse" (formula "1"))
                     )
                     (branch "if x_2 false"
                        (builtin "One Step Simplification" (formula "26"))
                        (builtin "One Step Simplification" (formula "1"))
                        (rule "true_left" (formula "1"))
                        (rule "ifElseSplit" (formula "25"))
                        (branch "if exc_0 instanceof java.lang.Throwable true"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                           (rule "true_left" (formula "1"))
                           (rule "variableDeclaration" (formula "25") (term "1") (newnames "e"))
                           (rule "delete_unnecessary_cast" (formula "25") (term "1"))
                           (branch "Normal Execution (exc_0 instanceof java.lang.Throwable)"
                              (builtin "One Step Simplification" (formula "1"))
                              (builtin "One Step Simplification" (formula "26"))
                              (rule "true_left" (formula "1"))
                              (rule "assignment" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "emptyModality" (formula "25") (term "1"))
                              (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "17")) (ifInst ""  (formula "17")) (ifInst ""  (formula "13")))
                              (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "25") (inst "sk=sk_4") (ifseqformula "4"))
                              (branch "Use Axiom"
                                 (rule "replaceKnownSelect_taclet0100110_4" (formula "25") (term "1,0,0"))
                                 (rule "replaceKnownSelect_taclet0100110_0" (formula "25") (term "0,0,1"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0100110_5" (formula "25") (term "1,0,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0100110_1" (formula "25") (term "0,0,1"))
                                 (rule "replaceKnownSelect_taclet0100110_2" (formula "25") (term "0,0,1,0"))
                                 (rule "replaceKnownAuxiliaryConstant_taclet0100110_3" (formula "25") (term "0,0,1,0"))
                                 (rule "replace_known_right" (formula "25") (term "0,1") (ifseqformula "16"))
                                 (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "15")))
                                 (rule "nonNull" (formula "25") (inst "i=i"))
                                 (rule "sub_literals" (formula "25") (term "2,1,0,1,1"))
                                 (builtin "One Step Simplification" (formula "25") (ifInst ""  (formula "14")))
                                 (rule "greater_literals" (formula "25") (term "0"))
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "allRight" (formula "25") (inst "sk=i_2"))
                                 (rule "impRight" (formula "25"))
                                 (rule "notRight" (formula "26"))
                                 (rule "andLeft" (formula "2"))
                                 (rule "inEqSimp_ltToLeq" (formula "3"))
                                 (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                                 (rule "polySimp_addComm1" (formula "3") (term "0"))
                                 (rule "inEqSimp_commuteLeq" (formula "2"))
                                 (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                                 (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                                 (rule "polySimp_elimOne" (formula "3") (term "0"))
                                 (rule "pullOutSelect" (formula "1") (term "0") (inst "selectSK=arr_0"))
                                 (rule "simplifySelectOfAnonEQ" (formula "1") (ifseqformula "14"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                 (rule "applyEq" (formula "1") (term "1") (ifseqformula "2"))
                                 (rule "ifEqualsNull" (formula "1"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0,0,0,1"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                                 (rule "andLeft" (formula "1"))
                                 (rule "elementOfSetMinus" (formula "1") (term "0"))
                                 (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "19")))
                                 (rule "true_left" (formula "1"))
                                 (rule "allLeft" (formula "16") (inst "t=i_2"))
                                 (rule "replaceKnownSelect_taclet00010100110_6" (formula "16") (term "0,0,0,0"))
                                 (rule "replace_known_left" (formula "16") (term "0,0,0") (ifseqformula "2"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_commuteGeq" (formula "16") (term "1"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (term "0") (ifseqformula "3"))
                                 (rule "qeq_literals" (formula "16") (term "0,0"))
                                 (builtin "One Step Simplification" (formula "16"))
                                 (rule "inEqSimp_contradInEq1" (formula "16") (ifseqformula "4"))
                                 (rule "andLeft" (formula "16"))
                                 (rule "inEqSimp_homoInEq1" (formula "16"))
                                 (rule "polySimp_pullOutFactor1b" (formula "16") (term "0"))
                                 (rule "add_literals" (formula "16") (term "1,1,0"))
                                 (rule "times_zero_1" (formula "16") (term "1,0"))
                                 (rule "add_zero_right" (formula "16") (term "0"))
                                 (rule "leq_literals" (formula "16"))
                                 (rule "closeFalse" (formula "16"))
                              )
                              (branch "Show Axiom Satisfiability"
                                 (builtin "One Step Simplification" (formula "25"))
                                 (rule "closeTrue" (formula "25"))
                              )
                           )
                           (branch "ClassCastException (!(exc_0 instanceof java.lang.Throwable))"
                              (builtin "One Step Simplification" (formula "25"))
                              (rule "closeTrue" (formula "25"))
                           )
                        )
                        (branch "if exc_0 instanceof java.lang.Throwable false"
                           (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "18")))
                           (rule "closeFalse" (formula "1"))
                        )
                     )
                  )
                  (branch "Show Axiom Satisfiability"
                     (builtin "One Step Simplification" (formula "13"))
                     (rule "closeTrue" (formula "13"))
                  )
               )
               (branch "Pre (entrySet)"
                  (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "2")))
                  (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "15") (inst "sk=sk_2") (ifseqformula "4"))
                  (branch "Use Axiom"
                     (rule "replace_known_right" (formula "15") (term "0,1") (ifseqformula "12"))
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "11")))
                     (rule "nonNull" (formula "15") (inst "i=i"))
                     (rule "greater_literals" (formula "15") (term "0,1"))
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "10")))
                     (rule "sub_literals" (formula "15") (term "2,1,0"))
                     (builtin "One Step Simplification" (formula "15"))
                     (rule "allRight" (formula "15") (inst "sk=i_1"))
                     (rule "impRight" (formula "15"))
                     (rule "notRight" (formula "16"))
                     (rule "andLeft" (formula "2"))
                     (rule "inEqSimp_ltToLeq" (formula "3"))
                     (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
                     (rule "polySimp_addComm1" (formula "3") (term "0"))
                     (rule "inEqSimp_commuteLeq" (formula "2"))
                     (rule "inEqSimp_sepNegMonomial0" (formula "3"))
                     (rule "polySimp_mulLiterals" (formula "3") (term "0"))
                     (rule "polySimp_elimOne" (formula "3") (term "0"))
                     (rule "allLeft" (formula "10") (inst "t=i_1"))
                     (rule "replace_known_left" (formula "10") (term "0,0,0") (ifseqformula "1"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_commuteGeq" (formula "10") (term "1"))
                     (rule "inEqSimp_contradInEq1" (formula "10") (term "0") (ifseqformula "2"))
                     (rule "qeq_literals" (formula "10") (term "0,0"))
                     (builtin "One Step Simplification" (formula "10"))
                     (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "10"))
                     (rule "andLeft" (formula "3"))
                     (rule "inEqSimp_homoInEq1" (formula "3"))
                     (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
                     (rule "add_literals" (formula "3") (term "1,1,0"))
                     (rule "times_zero_1" (formula "3") (term "1,0"))
                     (rule "add_zero_right" (formula "3") (term "0"))
                     (rule "leq_literals" (formula "3"))
                     (rule "closeFalse" (formula "3"))
                  )
                  (branch "Show Axiom Satisfiability"
                     (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")))
                     (rule "closeTrue" (formula "15"))
                  )
               )
            )
            (branch "ClassCastException (!(_o instanceof Map))"
               (builtin "One Step Simplification" (formula "16"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "14")) (ifInst ""  (formula "1")))
               (rule "closeTrue" (formula "15"))
            )
         )
         (branch "if _o instanceof Map false"
            (builtin "One Step Simplification" (formula "15"))
            (builtin "One Step Simplification" (formula "1") (ifInst ""  (formula "14")))
            (rule "notLeft" (formula "1"))
            (rule "blockReturn" (formula "15") (term "1"))
            (rule "methodCallReturn" (formula "15") (term "1"))
            (rule "assignment" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "methodCallEmpty" (formula "15") (term "1"))
            (rule "tryEmpty" (formula "15") (term "1"))
            (rule "emptyModality" (formula "15") (term "1"))
            (builtin "One Step Simplification" (formula "15"))
            (rule "Class_invariant_axiom_for_java_util_VerifiedIdentityHashMap" (formula "15") (inst "sk=sk_1") (ifseqformula "3"))
            (branch "Use Axiom"
               (rule "replace_known_right" (formula "15") (term "0,1,0") (ifseqformula "11"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "12")))
               (rule "nonNull" (formula "15") (inst "i=i"))
               (rule "greater_literals" (formula "15") (term "0,1"))
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "10")))
               (rule "sub_literals" (formula "15") (term "2,1,0"))
               (builtin "One Step Simplification" (formula "15"))
               (rule "allRight" (formula "15") (inst "sk=i_0"))
               (rule "impRight" (formula "15"))
               (rule "notRight" (formula "16"))
               (rule "andLeft" (formula "2"))
               (rule "inEqSimp_ltToLeq" (formula "3"))
               (rule "polySimp_mulComm0" (formula "3") (term "1,0,0"))
               (rule "polySimp_addComm1" (formula "3") (term "0"))
               (rule "inEqSimp_commuteLeq" (formula "2"))
               (rule "inEqSimp_sepNegMonomial0" (formula "3"))
               (rule "polySimp_mulLiterals" (formula "3") (term "0"))
               (rule "polySimp_elimOne" (formula "3") (term "0"))
               (rule "allLeft" (formula "9") (inst "t=i_0"))
               (rule "replace_known_left" (formula "9") (term "0,0,0") (ifseqformula "1"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_commuteGeq" (formula "9") (term "1"))
               (rule "inEqSimp_contradInEq1" (formula "9") (term "0") (ifseqformula "2"))
               (rule "qeq_literals" (formula "9") (term "0,0"))
               (builtin "One Step Simplification" (formula "9"))
               (rule "inEqSimp_contradInEq0" (formula "3") (ifseqformula "9"))
               (rule "andLeft" (formula "3"))
               (rule "inEqSimp_homoInEq1" (formula "3"))
               (rule "polySimp_pullOutFactor1b" (formula "3") (term "0"))
               (rule "add_literals" (formula "3") (term "1,1,0"))
               (rule "times_zero_1" (formula "3") (term "1,0"))
               (rule "add_zero_right" (formula "3") (term "0"))
               (rule "leq_literals" (formula "3"))
               (rule "closeFalse" (formula "3"))
            )
            (branch "Show Axiom Satisfiability"
               (builtin "One Step Simplification" (formula "15") (ifInst ""  (formula "11")) (ifInst ""  (formula "12")) (ifInst ""  (formula "11")) (ifInst ""  (formula "12")))
               (rule "closeTrue" (formula "15"))
            )
         )
      )
   )
)
(branch "Show Axiom Satisfiability"
   (builtin "One Step Simplification" (formula "7"))
   (rule "closeTrue" (formula "7"))
)
)

}
