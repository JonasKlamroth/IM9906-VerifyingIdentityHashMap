<?xml version="1.0" encoding="UTF-8"?>
<proofMetaFile proofFileMD5="a6484c430741ecf9fc55ebf85ab87bd9" proofClosed="false" proofOutdated="false">
   <markerMessage>
Open Proof:
java.util.VerifiedIdentityHashMap[java.util.Map::get(java.lang.Object)].JML behavior operation contract.0

Reason: Goal can&apos;t be closed automatically.
Hint: Check code and specifications for bugs or continue proof interactively.

Time: 0.633 s
Nodes: 327
Branches: 16
   </markerMessage>
   <calledMethods>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap#maskNull(java.lang.Object)"/>
      <calledMethod fullQualifiedName="java.util.VerifiedIdentityHashMap#hash(java.lang.Object, int)"/>
   </calledMethods>
   <assumptions>
      <assumption kind="Use Contract" name="JML behavior operation contract 0" target="identityHashCode(java.lang.Object)" type="java.lang.System"/>
   </assumptions>
   <references rep="pre: {heap=and(java.lang.Object::&lt;inv&gt;(heap,self),not(equals(param0,null)))}; mby: null; post: {heap=and(imp(equals(exc,null),and(java.lang.Object::&lt;inv&gt;(heap,self),not(equals(result,null)))),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))}; mods: {heap=setMinus(allLocs,freshLocs(heap)), savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: diamond; transaction: false">
      <callMethodReferences>
         <callMethodReference kjt="java.util.VerifiedIdentityHashMap" name="maskNull" parameters="Object;" implementations="java.util.VerifiedIdentityHashMap;"/>
         <callMethodReference kjt="java.util.VerifiedIdentityHashMap" name="hash" parameters="Object;int;" implementations="java.util.VerifiedIdentityHashMap;"/>
      </callMethodReferences>
      <type name="java.util.VerifiedIdentityHashMap">
         <axiomReferences>
            <axiomReference kjt="java.util.VerifiedIdentityHashMap" name="Class invariant axiom for java.util.VerifiedIdentityHashMap" rep="equiv(java.lang.Object::&lt;inv&gt;(heap,self),and(and(nonNull(heap,java.lang.Object[]::select(heap,self,java.util.VerifiedIdentityHashMap::$table),Z(1(#))),not(equals(java.lang.Object::select(heap,null,java.util.VerifiedIdentityHashMap::$NULL_KEY),null))),not(equals(java.util.Set::select(heap,self,java.util.VerifiedIdentityHashMap::$entrySet),null))))"/>
         </axiomReferences>
         <accessReferences>
            <accessReference kjt="java.util.VerifiedIdentityHashMap" name="java.util.VerifiedIdentityHashMap::NULL_KEY" type="Object" visibility="private" isStatic="true" isFinal="true" initializer="new Object ()"/>
            <accessReference kjt="java.util.VerifiedIdentityHashMap" name="java.util.VerifiedIdentityHashMap::table" type="" visibility="private" isStatic="false" isFinal="false" initializer=""/>
         </accessReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap" name="maskNull" parameters="Object;" src="privatestaticObjectmaskNull (Object key) {return (key==null ?NULL_KEY :key);}"/>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap" name="hash" parameters="Object;int;" src="privatestaticinthash (Object x,int length) {int h = System.identityHashCode(x);return ((h&lt;&lt;1)-(h&lt;&lt;8))&amp;(length-1);}"/>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap" name="get" parameters="Object;" src="publicjava.lang.Objectget (Object key) {Object k = maskNull(key);java.lang.Object[] tab = this.table;int len = tab.length;int i = hash(k,len);while ( true ) {     Object item = tab[i];             if (item==k)                 return  (java.lang.Object) tab[       i+1];             if (item==null)                 return  null;     i=nextKeyIndex(i,len);   } }"/>
         </inlineMethodReferences>
      </type>
   </references>
</proofMetaFile>
