<?xml version="1.0" encoding="UTF-8"?>
<proofMetaFile proofFileMD5="738eb297478947e71086d0837c688836" proofClosed="true" proofOutdated="false">
   <markerMessage>
Closed Proof:
java.util.VerifiedIdentityHashMap.EntrySet[java.util.Collection::clear()].JML behavior operation contract.0

Time: 0.207 s
Nodes: 121
Branches: 15
   </markerMessage>
   <usedContracts>
      <usedContract proofFile="/IM9906 - VerifyingIdentityHashMap/proofs/java/util/VerifiedIdentityHashMap.java/java_util_VerifiedIdentityHashMap_EntrySet[java_util_Set__clear()]_JML_behavior_operation_contract_0.proof"/>
      <usedContract proofFile="/IM9906 - VerifyingIdentityHashMap/proofs/java/util/VerifiedIdentityHashMap.java/java_util_VerifiedIdentityHashMap_EntrySet[java_util_Collection__clear()]_JML_behavior_operation_contract_0.proof"/>
   </usedContracts>
   <references rep="pre: {heap=java.lang.Object::&lt;inv&gt;(heap,self)}; mby: null; post: {heap=and(imp(equals(exc,null),java.lang.Object::&lt;inv&gt;(heap,self)),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))}; mods: {heap=intersect(if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs),if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs)), savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: diamond; transaction: false">
      <type name="java.util.VerifiedIdentityHashMap.EntrySet">
         <axiomReferences>
            <axiomReference kjt="java.util.VerifiedIdentityHashMap.EntrySet" name="Class invariant axiom for java.util.VerifiedIdentityHashMap.EntrySet" rep="equiv(java.lang.Object::&lt;inv&gt;(heap,self),true)"/>
         </axiomReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap.EntrySet" name="clear" parameters="" src="public void clear () {VerifiedIdentityHashMap.this.clear();}"/>
         </inlineMethodReferences>
         <contractReferences>
            <contractReference kjt="java.util.VerifiedIdentityHashMap.EntrySet" name="java.util.VerifiedIdentityHashMap.EntrySet[java.util.Collection::clear()].JML behavior operation contract.0#java.util.VerifiedIdentityHashMap.EntrySet[java.util.Set::clear()].JML behavior operation contract.0" rep="pre: {heap=or(java.lang.Object::&lt;inv&gt;(heap,self),java.lang.Object::&lt;inv&gt;(heap,self))}; mby: null; post: {heap=and(imp(java.lang.Object::&lt;inv&gt;(heapAtPre,self),and(imp(equals(exc,null),java.lang.Object::&lt;inv&gt;(heap,self)),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))),imp(java.lang.Object::&lt;inv&gt;(heapAtPre,self),and(imp(equals(exc,null),java.lang.Object::&lt;inv&gt;(heap,self)),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))))}; mods: {heap=intersect(if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs),if-then-else(java.lang.Object::&lt;inv&gt;(heap,self),setMinus(allLocs,freshLocs(heap)),allLocs)), savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: diamond; transaction: false"/>
         </contractReferences>
      </type>
   </references>
</proofMetaFile>
