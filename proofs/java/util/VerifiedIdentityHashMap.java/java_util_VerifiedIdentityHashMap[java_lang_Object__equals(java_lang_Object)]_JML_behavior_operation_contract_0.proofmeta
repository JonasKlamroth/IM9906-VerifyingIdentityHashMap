<?xml version="1.0" encoding="UTF-8"?>
<proofMetaFile proofFileMD5="8d1ef1abe6d9b3d4b7ffe5447e03b9a4" proofClosed="false" proofOutdated="false">
   <markerMessage>
Open Proof:
java.util.VerifiedIdentityHashMap[java.lang.Object::equals(java.lang.Object)].JML behavior operation contract.0

Reason: Goal can&apos;t be closed automatically.
Hint: Check code and specifications for bugs or continue proof interactively.

Time: 0.747 s
Nodes: 568
Branches: 21
   </markerMessage>
   <usedContracts>
      <usedContract proofFile="/IM9906 - VerifyingIdentityHashMap/proofs/java/util/VerifiedIdentityHashMap.java/java_util_VerifiedIdentityHashMap[java_util_Map__entrySet()]_JML_behavior_operation_contract_0.proof"/>
   </usedContracts>
   <calledMethods>
      <calledMethod fullQualifiedName="java.util.Set#equals(java.lang.Object)"/>
   </calledMethods>
   <assumptions>
      <assumption kind="Use Contract" name="JML behavior operation contract 0" target="entrySet()" type="java.util.Map"/>
   </assumptions>
   <references rep="pre: {heap=and(java.lang.Object::&lt;inv&gt;(heap,self),not(equals(param0,null)))}; mby: null; post: {heap=and(imp(equals(exc,null),java.lang.Object::&lt;inv&gt;(heap,self)),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))}; mods: {heap=setMinus(allLocs,freshLocs(heap)), savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: diamond; transaction: false">
      <type name="java.util.VerifiedIdentityHashMap">
         <axiomReferences>
            <axiomReference kjt="java.util.VerifiedIdentityHashMap" name="Class invariant axiom for java.util.VerifiedIdentityHashMap" rep="equiv(java.lang.Object::&lt;inv&gt;(heap,self),and(and(nonNull(heap,java.lang.Object[]::select(heap,self,java.util.VerifiedIdentityHashMap::$table),Z(1(#))),not(equals(java.lang.Object::select(heap,null,java.util.VerifiedIdentityHashMap::$NULL_KEY),null))),not(equals(java.util.Set::select(heap,self,java.util.VerifiedIdentityHashMap::$entrySet),null))))"/>
         </axiomReferences>
         <inlineMethodReferences>
            <inlineMethodReference kjt="java.util.VerifiedIdentityHashMap" name="equals" parameters="Object;" src="publicbooleanequals (Object o) {if (o==this) {             return  true;   }   else      if (o instanceof VerifiedIdentityHashMap) {       VerifiedIdentityHashMap m = (VerifiedIdentityHashMap)o;             if (m.size()!=this.size)                 return  false;      java.lang.Object[] tab = m.table;             for ( int i = 0; i&lt;tab.length; i+=2 ) {         Object k = tab[i];                 if (k!=null&amp;&amp;!containsMapping(k,tab[i+1]))                 return  false;       }             return  true;     }     else        if (o instanceof Map) {         Map m = (Map)o;             return  entrySet(). equals(m.entrySet());       }       else  {                 return  false;       } }"/>
         </inlineMethodReferences>
         <contractReferences>
            <contractReference kjt="java.util.VerifiedIdentityHashMap" name="java.util.VerifiedIdentityHashMap[java.util.Map::entrySet()].JML behavior operation contract.0" rep="pre: {heap=java.lang.Object::&lt;inv&gt;(heap,self)}; mby: null; post: {heap=and(imp(equals(exc,null),and(java.lang.Object::&lt;inv&gt;(heap,self),not(equals(result,null)))),imp(not(equals(exc,null)),and(imp(equals(java.lang.Throwable::instance(exc),TRUE),java.lang.Object::&lt;inv&gt;(heap,self)),or(equals(java.lang.Error::instance(exc),TRUE),equals(java.lang.RuntimeException::instance(exc),TRUE)))))}; mods: {heap=setMinus(allLocs,freshLocs(heap)), savedHeap=null}; hasMod: {heap=true, savedHeap=true}; termination: diamond; transaction: false"/>
         </contractReferences>
      </type>
   </references>
</proofMetaFile>
